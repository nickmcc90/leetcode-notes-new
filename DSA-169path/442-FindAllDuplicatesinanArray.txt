2/27/24

Tags: Array, sorting, Hash table ordered set

The array that we need to return for the problem does not count as extra space.

In an interview, the interviewer isn't going to include stuff that doesn't matter in
the problem. There's a trick with the range of numbers being within 1 and n (size).

With each value we iterate through, we are going to take that value, subtract one, and
turn that value into an index, and go to that index. At this index, we will make this
number negative. So, when we reach a duplicate and the index we go to is already negative,
we know that we've seen this number before.

For each number we iterate on, we take the absolute value of it, because we may be going
onto a negative number already.

C++

class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        vector<int> result;
        for(int i = 0; i < nums.size(); i++) {
            int index = abs(nums[i]) - 1;
            if(nums[index] < 0) {
                result.push_back(index + 1);
            }
            nums[index] = -nums[index];
        }
        return result;
    }
};